%% -*- erlang -*-

%% Copyright (C) 2014, Jaguar Land Rover
%%
%% This program is licensed under the terms and conditions of the
%% Mozilla Public License, version 2.0.  The full text of the 
%% Mozilla Public License is at https://www.mozilla.org/MPL/2.0/
%%
%% Configuration file for the (in-vehicle) IVI used by the hvac_demo
%%
%% See README.md for details on the demo.
%%
%% See README.md for details on the demo.
%%
%% See ../CONFIGURE.md for a details on the configuration process
%% itself.
%% 
%% See ../rvi_sample.config for a fully documented sample
%% configuration file
%% 
[
 %% All erlang apps needed to fire up a node. Do not touch.
 {apps,
  [kernel,
   stdlib,
   sasl,
   {setup, load},
   syntax_tools,
   lager,
   crypto,
   public_key,
   exo,
   compiler,
   ssl,
   asn1,
   wse,

   rvi, 
   rvi_common,
   service_edge,
   service_discovery,
   authorize,
   schedule,
   data_link_bert_rpc,
   protocol ]},

 {env,
  [
   %% Lager is the main logging mechanism.
   %% See https://github.com/basho/lager for details.
   %%
   {lager, 
    [ { handlers, 
	%% Change this to debug, info, notice, warning, or error in
	%% order to lower the console chatter.
	[ {lager_console_backend, info} ]
      }
    ]
   },
      
   %% All RVI configuration is done here.
   %% Please note that the rvi_node.sh launch script
   %% can still override the port range and static nodes
   %% through its command line parameters.
   %%
   {rvi, 
    [
     { node_address, "0.0.0.0:0" },   
     { node_service_prefix, "jlr.com/vin/1234/"},

     { static_nodes, 
       [ 
	 { "jlr.com/backend/", "127.0.0.1:8807" }
       ]
     },


     { components, 
       [
	{ service_edge, 
	  [	   
	    { url, "http://127.0.0.1:8811" },
	    { exo_http_opts, [ { port, 8811 } ] },
            { gen_server, service_edge_rpc }
	  ]
	},
	{ service_discovery, 
	  [ 
	    { gen_server, service_discovery_rpc }
	  ]
	},
	{ schedule, 
	  [
	   { gen_server, schedule }
	  ]
	},
	{ authorize, 
	  [ 
	    { gen_server, authorize_rpc }
	  ]
	},
	{ protocol, 
	  [{ gen_server, protocol_rpc }
	  ]
	},
	{ data_link, 
	  [ 
	    { gen_server, data_link_bert_rpc_rpc },
	    { bert_rpc_client, [ {port, 8817 }]}
	  ]
	}
       ]
     }
    ]}
  ]}
 
].
